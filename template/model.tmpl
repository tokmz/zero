{{define "model"}}
// Code generated by github.com/tokmz/zero. DO NOT EDIT.

package {{.Package}}

import (
	"time"
	"gorm.io/gorm"
)

// {{.TableName | ToCamel}} {{.Comment}}
type {{.TableName | ToCamel}} struct {
	{{- range .Fields}}
	{{.Name | ToCamel}} {{.Type}} `gorm:"{{.Tag}}" json:"{{.Name | ToSnake}}"` {{if .Comment}}// {{.Comment}}{{end}}
	{{- end}}

	{{- if .Relations}}
	{{- range .Relations}}
	{{- if eq .Type "HasOne"}}
	// HasOne {{.Comment}}
	{{.Name | ToCamel}} *{{.Model}} `gorm:"foreignKey:{{.ForeignKey}};references:{{.References}}" json:"{{.Name | ToSnake}},omitempty"`
	{{- else if eq .Type "BelongsTo"}}
	// BelongsTo {{.Comment}}
	{{.Name | ToCamel}} *{{.Model}} `gorm:"foreignKey:{{.ForeignKey}};references:{{.References}}" json:"{{.Name | ToSnake}},omitempty"`
	{{- else if eq .Type "HasMany"}}
	// HasMany {{.Comment}}
	{{.Name | ToCamel}} []*{{.Model}} `gorm:"foreignKey:{{.ForeignKey}};references:{{.References}}" json:"{{.Name | ToSnake}},omitempty"`
	{{- else if eq .Type "ManyToMany"}}
	// ManyToMany {{.Comment}}
	{{.Name | ToCamel}} []*{{.Model}} `gorm:"many2many:{{.JoinTable}};foreignKey:{{.ForeignKey}};joinForeignKey:{{.JoinForeignKey}};references:{{.References}};joinReferences:{{.JoinReferences}}" json:"{{.Name | ToSnake}},omitempty"`
	{{- end}}
	{{- end}}
	{{- end}}
}

// TableName 表名
func (m *{{.TableName | ToCamel}}) TableName() string {
	return "{{.TableName}}"
}

// BeforeCreate 创建前回调
func (m *{{.TableName | ToCamel}}) BeforeCreate(tx *gorm.DB) error {
	{{- range .Fields}}
	{{- if eq .Name "created_at" "updated_at"}}
	m.{{.Name | ToCamel}} = time.Now()
	{{- end}}
	{{- end}}
	return nil
}

// BeforeUpdate 更新前回调
func (m *{{.TableName | ToCamel}}) BeforeUpdate(tx *gorm.DB) error {
	{{- range .Fields}}
	{{- if eq .Name "updated_at"}}
	m.{{.Name | ToCamel}} = time.Now()
	{{- end}}
	{{- end}}
	return nil
}

{{- if .Relations}}
{{- range .Relations}}
{{- if eq .Type "HasOne"}}
// Get{{.Name | ToCamel}} 获取{{.Comment}}
func (m *{{$.TableName | ToCamel}}) Get{{.Name | ToCamel}}(db *gorm.DB) (*{{.Model}}, error) {
	var result {{.Model}}
	err := db.Model(m).Association("{{.Name | ToCamel}}").Find(&result)
	return &result, err
}

{{- else if eq .Type "BelongsTo"}}
// Get{{.Name | ToCamel}} 获取{{.Comment}}
func (m *{{$.TableName | ToCamel}}) Get{{.Name | ToCamel}}(db *gorm.DB) (*{{.Model}}, error) {
	var result {{.Model}}
	err := db.Model(m).Association("{{.Name | ToCamel}}").Find(&result)
	return &result, err
}

{{- else if eq .Type "HasMany"}}
// Get{{.Name | ToCamel}} 获取{{.Comment}}列表
func (m *{{$.TableName | ToCamel}}) Get{{.Name | ToCamel}}(db *gorm.DB) ([]*{{.Model}}, error) {
	var results []*{{.Model}}
	err := db.Model(m).Association("{{.Name | ToCamel}}").Find(&results)
	return results, err
}

// Add{{.Name | ToCamel}} 添加{{.Comment}}
func (m *{{$.TableName | ToCamel}}) Add{{.Name | ToCamel}}(db *gorm.DB, items ...*{{.Model}}) error {
	return db.Model(m).Association("{{.Name | ToCamel}}").Append(items)
}

// Remove{{.Name | ToCamel}} 移除{{.Comment}}
func (m *{{$.TableName | ToCamel}}) Remove{{.Name | ToCamel}}(db *gorm.DB, items ...*{{.Model}}) error {
	return db.Model(m).Association("{{.Name | ToCamel}}").Delete(items)
}

// Clear{{.Name | ToCamel}} 清空{{.Comment}}
func (m *{{$.TableName | ToCamel}}) Clear{{.Name | ToCamel}}(db *gorm.DB) error {
	return db.Model(m).Association("{{.Name | ToCamel}}").Clear()
}

// Count{{.Name | ToCamel}} 统计{{.Comment}}数量
func (m *{{$.TableName | ToCamel}}) Count{{.Name | ToCamel}}(db *gorm.DB) int64 {
	return db.Model(m).Association("{{.Name | ToCamel}}").Count()
}

{{- else if eq .Type "ManyToMany"}}
// Get{{.Name | ToCamel}} 获取{{.Comment}}列表
func (m *{{$.TableName | ToCamel}}) Get{{.Name | ToCamel}}(db *gorm.DB) ([]*{{.Model}}, error) {
	var results []*{{.Model}}
	err := db.Model(m).Association("{{.Name | ToCamel}}").Find(&results)
	return results, err
}

// Add{{.Name | ToCamel}} 添加{{.Comment}}
func (m *{{$.TableName | ToCamel}}) Add{{.Name | ToCamel}}(db *gorm.DB, items ...*{{.Model}}) error {
	return db.Model(m).Association("{{.Name | ToCamel}}").Append(items)
}

// Remove{{.Name | ToCamel}} 移除{{.Comment}}
func (m *{{$.TableName | ToCamel}}) Remove{{.Name | ToCamel}}(db *gorm.DB, items ...*{{.Model}}) error {
	return db.Model(m).Association("{{.Name | ToCamel}}").Delete(items)
}

// Replace{{.Name | ToCamel}} 替换{{.Comment}}
func (m *{{$.TableName | ToCamel}}) Replace{{.Name | ToCamel}}(db *gorm.DB, items ...*{{.Model}}) error {
	return db.Model(m).Association("{{.Name | ToCamel}}").Replace(items)
}

// Clear{{.Name | ToCamel}} 清空{{.Comment}}
func (m *{{$.TableName | ToCamel}}) Clear{{.Name | ToCamel}}(db *gorm.DB) error {
	return db.Model(m).Association("{{.Name | ToCamel}}").Clear()
}

// Count{{.Name | ToCamel}} 统计{{.Comment}}数量
func (m *{{$.TableName | ToCamel}}) Count{{.Name | ToCamel}}(db *gorm.DB) int64 {
	return db.Model(m).Association("{{.Name | ToCamel}}").Count()
}
{{- end}}
{{- end}}
{{- end}}
{{end}} 