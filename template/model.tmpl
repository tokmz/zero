{{define "model"}}
// Code generated by github.com/tokmz/zero. DO NOT EDIT.
// Generated at: {{now "2006-01-02 15:04:05"}}

package {{.Package}}

{{if .ImportTime}}
import (
	"context"
	"time"

	"gorm.io/gorm"
)
{{else}}
import (
	"context"

	"gorm.io/gorm"
)
{{end}}

// {{.ModelName}} {{.Comment}}
type {{.ModelName}} struct {
	{{- range .Fields}}
	{{.Name}} {{.Type}} {{.Tag}} // {{.Comment}}
	{{- end}}
	{{- if .Relations}}

	// 关联关系
	{{- range .Relations.HasOne}}
	{{.Table}} *{{.Table}} `gorm:"foreignKey:{{.ForeignKey}};references:{{.References}}"` // 一对一关系
	{{- end}}
	{{- range .Relations.HasMany}}
	{{.Table}}List []{{.Table}} `gorm:"foreignKey:{{.ForeignKey}};references:{{.References}}"` // 一对多关系
	{{- end}}
	{{- range .Relations.BelongsTo}}
	{{.Table}} *{{.Table}} `gorm:"foreignKey:{{.ForeignKey}};references:{{.References}}"` // 从属关系
	{{- end}}
	{{- range .Relations.ManyToMany}}
	{{.Table}}List []{{.Table}} `gorm:"many2many:{{.JoinTable}};foreignKey:{{.JoinForeignKey}};references:{{.References}};joinForeignKey:{{.JoinReferences}}"` // 多对多关系
	{{- end}}
	{{- end}}
}

// TableName 表名
func (m *{{.ModelName}}) TableName() string {
	return "{{.TableName}}"
}

// New{{.ModelName}} 创建 {{.ModelName}} 实例
func New{{.ModelName}}() *{{.ModelName}} {
	return &{{.ModelName}}{}
}

// WithContext 设置上下文
func (m *{{.ModelName}}) WithContext(ctx context.Context) *gorm.DB {
	return db.Model(m).WithContext(ctx)
}

// Transaction 事务处理
func (m *{{.ModelName}}) Transaction(ctx context.Context, fn func(tx *gorm.DB) error) error {
	return m.WithContext(ctx).Transaction(fn)
}

{{if .Relations}}// 预加载方法
{{range .Relations.HasOne}}// Preload{{.Table}} 预加载{{.Table}}
func (m *{{$.ModelName}}) Preload{{.Table}}(db *gorm.DB) *gorm.DB {
	return db.Preload("{{.Table}}")
}
{{end}}
{{range .Relations.HasMany}}// Preload{{.Table}}List 预加载{{.Table}}列表
func (m *{{$.ModelName}}) Preload{{.Table}}List(db *gorm.DB) *gorm.DB {
	return db.Preload("{{.Table}}List")
}
{{end}}
{{range .Relations.BelongsTo}}// Preload{{.Table}} 预加载{{.Table}}
func (m *{{$.ModelName}}) Preload{{.Table}}(db *gorm.DB) *gorm.DB {
	return db.Preload("{{.Table}}")
}
{{end}}
{{range .Relations.ManyToMany}}// Preload{{.Table}}List 预加载{{.Table}}列表
func (m *{{$.ModelName}}) Preload{{.Table}}List(db *gorm.DB) *gorm.DB {
	return db.Preload("{{.Table}}List")
}
{{end}}{{end}}{{end}}

